rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user is a participant in the chat room
    function isParticipant(participants) {
      return isAuthenticated() && 
             request.auth.uid in participants;
    }
    
    // Users collection rules
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && request.auth.uid == userId;
    }
    
    // Chat rooms rules
    match /chatRooms/{roomId} {
      allow create: if isAuthenticated();
      allow read, update: if isAuthenticated() && 
                           isParticipant(resource.data.participants);
      
      // Messages subcollection rules
      match /messages/{messageId} {
        allow read: if isAuthenticated() && 
                     isParticipant(get(/databases/$(database)/documents/chatRooms/$(roomId)).data.participants);
        allow create: if isAuthenticated() && 
                       isParticipant(get(/databases/$(database)/documents/chatRooms/$(roomId)).data.participants) && 
                       request.resource.data.senderId == request.auth.uid;
      }
    }
  }
}